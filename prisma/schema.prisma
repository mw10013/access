// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "sqlite"
  url      = env("DATABASE_URL")
}

model User {
  id                    Int         @id @default(autoincrement())
  createdAt             DateTime    @default(now())
  updatedAt             DateTime    @updatedAt
  email                 String      @unique
  passwordHash          String
  role                  String      // "customer" | "admin"
  resetPasswordToken    String?
  resetPasswordExpireAt DateTime?
  accessUsers           AccessUser[]
  accessManagers        AccessManager[]
}

model AccessUser {
  id                Int         @id @default(autoincrement())
  name              String   
  description       String      @default("") 
  code              String
  activateCodeAt    DateTime?
  expireCodeAt      DateTime?
  user              User        @relation(fields: [userId], references: [id])
  userId            Int
  accessPoints      AccessPoint[]
  accessEvents      AccessEvent[]
  deletedAt         DateTime    @default("1970-01-01T00:00:00.000Z")
  // deletedAt default indicates not deleted.
  // Null not used since deletedAt needed in @@unique.

  @@unique([name, userId, deletedAt])
  @@unique([code, userId, deletedAt])
}

model AccessManager {
  id                Int            @id @default(autoincrement())
  name              String         @default("Manager")
  description       String         @default("") 
  accessPoints      AccessPoint[] 
  user              User           @relation(fields: [userId], references: [id])
  userId            Int
}

model AccessPoint {
  id                Int       @id @default(autoincrement())
  name              String
  description       String    @default("")
  accessUsers       AccessUser[]
  heartbeatAt       DateTime?
  accessManager     AccessManager @relation(fields: [accessManagerId], references: [id])
  accessManagerId   Int 
  position          Int
  accessEvents      AccessEvent[]

  @@unique([accessManagerId, position])    
}

model AccessEvent {
  id                Int         @id @default(autoincrement())
  at                DateTime
  access            String
  code              String
  accessUser        AccessUser?  @relation(fields: [accessUserId], references: [id])
  accessUserId      Int?
  accessPoint       AccessPoint @relation(fields: [accessPointId], references: [id])
  accessPointId     Int
}

